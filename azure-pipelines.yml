trigger: none
#- main

name: Deploy Bicep files
parameters:
  - name: azureServiceConnection
    type: string
    default: azureServiceConnection
  - name: resourceGroupName
    type: string
    default: reversefunctionrg
  - name: location
    type: string
    default: australiasoutheast
  - name: appName
    type: string
    default: reversestring
variables:
  templateFile: 'main.bicep'
  functionSolutionPath: '$(System.DefaultWorkingDirectory)/ReverseStringFunction'
pool: 'My Devices'
steps:
# Build and prepare .NET
- task: UseDotNet@2
  displayName: 'Use .NET 6'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore function NuGet packages'
  inputs:
    command: 'restore'
    projects: '$(functionSolutionPath)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build function'
  inputs:
    command: 'build'
    projects: '$(functionSolutionPath)'

- task: DotNetCoreCLI@2
  displayName:  Publish function to folder.
  inputs:
    command: 'publish'
    arguments: '--configuration Release --output $(functionSolutionPath)/build'
    publishWebProjects: false
    workingDirectory: '$(functionSolutionPath)'
    zipAfterPublish: true

# Create Azure resources
- task: AzureCLI@2
  inputs:
    azureSubscription: '${{ parameters.azureServiceConnection }}'
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      $rgExists = az group exists --name ${{ parameters.resourceGroupName }}
      if ($rgExists)
      {
        az group delete --name ${{ parameters.resourceGroupName }}
      }
      az group create --name ${{ parameters.resourceGroupName }} --location ${{ parameters.location }}
      az deployment group create --resource-group ${{ parameters.resourceGroupName }} --template-file $(templateFile)

# Upload function
- task: AzureFunctionApp@1
  inputs:
    azureSubscription: '${{ parameters.azureServiceConnection }}'
    appType: 'functionApp'
    appName: '${{ parameters.appName }}'
    deployToSlotOrASE: true
    resourceGroupName: '${{ parameters.resourceGroupName }}'
    slotName: 'production'
    package: '$(functionSolutionPath)/build/build.zip'
    deploymentMethod: 'auto'